[{"/home/ali/Work/chat-app/src/index.js":"1","/home/ali/Work/chat-app/src/App.js":"2","/home/ali/Work/chat-app/src/reportWebVitals.js":"3","/home/ali/Work/chat-app/src/components/RoomList.js":"4","/home/ali/Work/chat-app/src/components/Login.js":"5","/home/ali/Work/chat-app/src/components/ChatRoom.js":"6","/home/ali/Work/chat-app/src/components/AddRoom.js":"7","/home/ali/Work/chat-app/src/Firebase.js":"8"},{"size":591,"mtime":1632705511798,"results":"9","hashOfConfig":"10"},{"size":1216,"mtime":1633024657032,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1632703020001,"results":"12","hashOfConfig":"10"},{"size":3057,"mtime":1632868625097,"results":"13","hashOfConfig":"10"},{"size":1691,"mtime":1633022415775,"results":"14","hashOfConfig":"10"},{"size":0,"mtime":1633021050985,"results":"15","hashOfConfig":"10"},{"size":1734,"mtime":1632867134820,"results":"16","hashOfConfig":"10"},{"size":365,"mtime":1633024231887,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ihynjp",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ali/Work/chat-app/src/index.js",[],["37","38"],"/home/ali/Work/chat-app/src/App.js",[],"/home/ali/Work/chat-app/src/reportWebVitals.js",[],"/home/ali/Work/chat-app/src/components/RoomList.js",["39","40","41","42","43","44","45"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Jumbotron,\n  Spinner,\n  LisGroup,\n  ListGroupItem,\n  Button,\n} from \"reactstrap\";\nimport moment from \"moment\";\nimport firebase from \"../Firebase\";\n\nexport default function RoomList() {\n  const [room, setRoom] = useState([]);\n  const [showLoading, setShowLoading] = useState(true);\n  const [nickname, setNickname] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setNickname(localStorage.getItem(\"nickname\"));\n      firebase\n        .database()\n        .ref(\"rooms/\")\n        .on(\"value\", (resp) => {\n          setRoom([]);\n          setRoom(snapshotToArray(resp));\n          setShowLoading(false);\n        });\n    };\n    fetchData();\n  }, []);\n\n  const snapshotToArray = (snapshot) => {\n    const returnArr = [];\n\n    snapshot.forEach((childSnapshot) => {\n      const item = childSnapshot.val();\n      item.key = childSnapshot.key;\n      returnArr.push(item);\n    });\n\n    return returnArr;\n  };\n\n  const enterChatRoom = (roomname) => {\n    const chat = {\n      roomname: \"\",\n      nickname: \"\",\n      message: \"\",\n      date: \"\",\n      type: \"\",\n    };\n    chat.roomname = roomname;\n    chat.nickname = nickname;\n    chat.date = Moment(new Date()).format(\"DD/MM/YYYY HH:mm:ss\");\n    chat.type = \"join\";\n    const newMessage = firebase.database().ref(\"chats/\").push();\n    newMessage.set(chat);\n\n    firebase,\n      database()\n        .ref(\"roomusers/\")\n        .orderByChild(\"roomname\")\n        .equalTo(roomname)\n        .on(\"value\", (resp) => {\n          let roomuser = [];\n          roomuser = snapshotToArray(resp);\n          const user = roomuser.find((x) => x.nickname === nickname);\n          if (user !== undefined) {\n            const userRef = firebase.database().ref(\"roomusers/\" + user.key);\n            userRef.update({ status: \"online\" });\n          } else {\n            const newroomuser = { roomname: \"\", nickname: \"\", status: \"\" };\n            newroomuser.roomname = roomname;\n            newroomuser.nickname = nickname;\n            newroomuser.status = \"online\";\n            const newRoomUser = firebase.database().ref(\"roomusers/\").push();\n            newRoomUser.set(newroomuser);\n          }\n        });\n    history.push(\"/chatroom/\" + roomname);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"nickname\");\n    history.push(\"/login\");\n  };\n\n  return (\n    <div>\n      {showLoading && <Spinner color=\"primary\" />}\n      <Jumbotron>\n        <h3>\n          {nickname}\n          <Button\n            onClick={() => {\n              logout();\n            }}\n          >\n            Logout\n          </Button>\n        </h3>\n        <h2>Room List</h2>\n        <div>\n          <Link to='/addroom'>Add Room</Link>\n        </div>\n        <ListGroup>\n          {room.map((item, idx) => ( <ListGroupItem key={idx} action onClick={() =>{ enterChatRoom(item.roomname) }}></ListGroupItem>\n          ))}\n        </ListGroup>\n      </Jumbotron>\n    </div>\n  );\n}\n","/home/ali/Work/chat-app/src/components/Login.js",["46"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  Jumbotron,\n  Spinner,\n  Form,\n  Button,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport firebase from \"../Firebase\";\n\nexport default function Login() {\n  const history = useHistory();\n  const [creds, setCreds] = useState({ nickname: \"\" });\n  const [showLoading, setShowLoading] = useState(false);\n  const ref = firebase.database().ref(\"users/\");\n\n  const onChange = (e) => {\n    e.persist();\n    setCreds({ ...creds, [e.target.name]: e.target.value });\n  };\n  const login = (e) => {\n    e.preventDefault();\n    setShowLoading(true);\n    ref\n      .orderByChild(\"nickname\")\n      .equalTo(creds.nickname)\n      .once(\"value\", (snapshot) => {\n        if (snapshot.exists()) {\n          localStorage.setItem(\"nickname\", creds.nickname);\n          history.push(\"/roomlist\");\n          setShowLoading(false);\n        } else {\n          const newUser = firebase.database().ref(\"users/\").push();\n          newUser.set(creds);\n          localStorage.setItem(\"nickname\", creds.nickname);\n          history.push(\"/roomlist\");\n          setShowLoading(false);\n        }\n      });\n  };\n  return (\n    <div>\n      {showLoading && <Spinner color=\"primary\" />}\n      <Jumbotron>\n        <Form onSubmit={login}>\n          <FormGroup>\n            <Label>Nickname</Label>\n            <Input\n              type=\"text\"\n              name=\"nickname\"\n              id=\"nickname\"\n              placeholder=\"Enter Your Nickname\"\n            />\n          </FormGroup>\n          <Button variant=\"primary\" type=\"submit\">\n            Login\n          </Button>\n        </Form>\n      </Jumbotron>\n    </div>\n  );\n}\n","/home/ali/Work/chat-app/src/components/ChatRoom.js",[],"/home/ali/Work/chat-app/src/components/AddRoom.js",[],"/home/ali/Work/chat-app/src/Firebase.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":6,"column":3,"nodeType":"53","messageId":"54","endLine":6,"endColumn":11},{"ruleId":"51","severity":1,"message":"55","line":10,"column":8,"nodeType":"53","messageId":"54","endLine":10,"endColumn":14},{"ruleId":"56","severity":2,"message":"57","line":56,"column":17,"nodeType":"53","messageId":"58","endLine":56,"endColumn":23},{"ruleId":"59","severity":2,"message":"60","line":61,"column":5,"nodeType":"61","messageId":"62","endLine":81,"endColumn":12},{"ruleId":"63","severity":1,"message":"64","line":61,"column":13,"nodeType":"65","messageId":"66","endLine":61,"endColumn":14},{"ruleId":"56","severity":2,"message":"67","line":62,"column":7,"nodeType":"53","messageId":"58","endLine":62,"endColumn":15},{"ruleId":"68","severity":2,"message":"69","line":108,"column":10,"nodeType":"70","messageId":"71","endLine":108,"endColumn":19},{"ruleId":"51","severity":1,"message":"72","line":20,"column":9,"nodeType":"53","messageId":"54","endLine":20,"endColumn":17},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'LisGroup' is defined but never used.","Identifier","unusedVar","'moment' is defined but never used.","no-undef","'Moment' is not defined.","undef","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'database' is not defined.","react/jsx-no-undef","'ListGroup' is not defined.","JSXIdentifier","undefined","'onChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]