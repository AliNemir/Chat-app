{"ast":null,"code":"var _jsxFileName = \"/home/ali/Work/chat-app/src/components/RoomList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Jumbotron, Spinner, LisGroup, ListGroupItem, Button } from \"reactstrap\";\nimport moment from \"moment\";\nimport firebase from \"../Firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RoomList() {\n  _s();\n\n  const [room, setRoom] = useState([]);\n  const [showLoading, setShowLoading] = useState(true);\n  const [nickname, setNickname] = useState(\"\");\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      setNickname(localStorage.getItem(\"nickname\"));\n      firebase.database().ref(\"rooms/\").on(\"value\", resp => {\n        setRoom([]);\n        setRoom(snapshotToArray(resp));\n        setShowLoading(false);\n      });\n    };\n\n    fetchData();\n  }, []);\n\n  const snapshotToArray = snapshot => {\n    const returnArr = [];\n    snapshot.forEach(childSnapshot => {\n      const item = childSnapshot.val();\n      item.key = childSnapshot.key;\n      returnArr.push(item);\n    });\n    return returnArr;\n  };\n\n  const enterChatRoom = roomname => {\n    const chat = {\n      roomname: \"\",\n      nickname: \"\",\n      message: \"\",\n      date: \"\",\n      type: \"\"\n    };\n    chat.roomname = roomname;\n    chat.nickname = nickname;\n    chat.date = Moment(new Date()).format(\"DD/MM/YYYY HH:mm:ss\");\n    chat.type = \"join\";\n    const newMessage = firebase.database().ref(\"chats/\").push();\n    newMessage.set(chat);\n    firebase, database().ref(\"roomusers/\").orderByChild(\"roomname\").equalTo(roomname).on(\"value\", resp => {\n      let roomuser = [];\n      roomuser = snapshotToArray(resp);\n      const user = roomuser.find(x => x.nickname === nickname);\n\n      if (user !== undefined) {\n        const userRef = firebase.database().ref(\"roomusers/\" + user.key);\n        userRef.update({\n          status: \"online\"\n        });\n      } else {\n        const newroomuser = {\n          roomname: \"\",\n          nickname: \"\",\n          status: \"\"\n        };\n        newroomuser.roomname = roomname;\n        newroomuser.nickname = nickname;\n        newroomuser.status = \"online\";\n        const newRoomUser = firebase.database().ref(\"roomusers/\").push();\n        newRoomUser.set(newroomuser);\n      }\n    });\n    history.push(\"/chatroom/\" + roomname);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"nickname\");\n    history.push(\"/login\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [nickname, /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            logout();\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Room List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/addroom\",\n          children: \"Add Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LisGroup, {\n        children: room.map((item, idx) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          action: true,\n          onClick: () => {\n            enterChatRoom(item.roomname);\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RoomList, \"dSrPNte35UN1gosbtqRXRIq41ZE=\", false, function () {\n  return [useHistory];\n});\n\n_c = RoomList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomList\");","map":{"version":3,"sources":["/home/ali/Work/chat-app/src/components/RoomList.js"],"names":["React","useState","useEffect","Link","useHistory","Jumbotron","Spinner","LisGroup","ListGroupItem","Button","moment","firebase","RoomList","room","setRoom","showLoading","setShowLoading","nickname","setNickname","history","fetchData","localStorage","getItem","database","ref","on","resp","snapshotToArray","snapshot","returnArr","forEach","childSnapshot","item","val","key","push","enterChatRoom","roomname","chat","message","date","type","Moment","Date","format","newMessage","set","orderByChild","equalTo","roomuser","user","find","x","undefined","userRef","update","status","newroomuser","newRoomUser","logout","removeItem","map","idx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Jumbotron,\n  Spinner,\n  LisGroup,\n  ListGroupItem,\n  Button,\n} from \"reactstrap\";\nimport moment from \"moment\";\nimport firebase from \"../Firebase\";\n\nexport default function RoomList() {\n  const [room, setRoom] = useState([]);\n  const [showLoading, setShowLoading] = useState(true);\n  const [nickname, setNickname] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setNickname(localStorage.getItem(\"nickname\"));\n      firebase\n        .database()\n        .ref(\"rooms/\")\n        .on(\"value\", (resp) => {\n          setRoom([]);\n          setRoom(snapshotToArray(resp));\n          setShowLoading(false);\n        });\n    };\n    fetchData();\n  }, []);\n\n  const snapshotToArray = (snapshot) => {\n    const returnArr = [];\n\n    snapshot.forEach((childSnapshot) => {\n      const item = childSnapshot.val();\n      item.key = childSnapshot.key;\n      returnArr.push(item);\n    });\n\n    return returnArr;\n  };\n\n  const enterChatRoom = (roomname) => {\n    const chat = {\n      roomname: \"\",\n      nickname: \"\",\n      message: \"\",\n      date: \"\",\n      type: \"\",\n    };\n    chat.roomname = roomname;\n    chat.nickname = nickname;\n    chat.date = Moment(new Date()).format(\"DD/MM/YYYY HH:mm:ss\");\n    chat.type = \"join\";\n    const newMessage = firebase.database().ref(\"chats/\").push();\n    newMessage.set(chat);\n\n    firebase,\n      database()\n        .ref(\"roomusers/\")\n        .orderByChild(\"roomname\")\n        .equalTo(roomname)\n        .on(\"value\", (resp) => {\n          let roomuser = [];\n          roomuser = snapshotToArray(resp);\n          const user = roomuser.find((x) => x.nickname === nickname);\n          if (user !== undefined) {\n            const userRef = firebase.database().ref(\"roomusers/\" + user.key);\n            userRef.update({ status: \"online\" });\n          } else {\n            const newroomuser = { roomname: \"\", nickname: \"\", status: \"\" };\n            newroomuser.roomname = roomname;\n            newroomuser.nickname = nickname;\n            newroomuser.status = \"online\";\n            const newRoomUser = firebase.database().ref(\"roomusers/\").push();\n            newRoomUser.set(newroomuser);\n          }\n        });\n    history.push(\"/chatroom/\" + roomname);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"nickname\");\n    history.push(\"/login\");\n  };\n\n  return (\n    <div>\n      {showLoading && <Spinner color=\"primary\" />}\n      <Jumbotron>\n        <h3>\n          {nickname}\n          <Button\n            onClick={() => {\n              logout();\n            }}\n          >\n            Logout\n          </Button>\n        </h3>\n        <h2>Room List</h2>\n        <div>\n          <Link to='/addroom'>Add Room</Link>\n        </div>\n        <LisGroup>\n          {room.map((item, idx) => ( <ListGroupItem key={idx} action onClick={() =>{ enterChatRoom(item.roomname) }}></ListGroupItem>\n          ))}\n        </LisGroup>\n      </Jumbotron>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}