{"ast":null,"code":"var _jsxFileName = \"/home/ali/Work/chat-app/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Jumbotron, Spinner, Form, Button, FormGroup, Label, Input } from \"reactstrap\";\nimport firebase from \"../Firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const history = useHistory();\n  const [creds, setCreds] = useState({\n    nickname: \"\"\n  });\n  const [showLoading, setShowLoading] = useState(false);\n  const ref = firebase.database().ref(\"users/\");\n\n  const onChange = e => {\n    e.persist();\n    setCreds({ ...creds,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const login = e => {\n    e.preventDefault();\n    setShowLoading(true);\n    ref.orderByChild(\"nickname\").equalTo(creds.nickname).once(\"value\", snapshot => {\n      if (snapshot.exists()) {\n        localStorage.setItem(\"nickname\", creds.nickname);\n        history.push(\"/roomlist\");\n        setShowLoading(false);\n      } else {\n        const newUser = firebase.database().ref(\"users/\").push();\n        newUser.set(creds);\n        localStorage.setItem(\"nickname\", creds.nickname);\n        history.push(\"/roomlist\");\n        setShowLoading(false);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: login,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"nickname\",\n            id: \"nickname\",\n            placeholder: \"Enter Your Nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"XFL4Dsf7+CF08bJkOGW5OZMvy20=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/ali/Work/chat-app/src/components/Login.js"],"names":["React","useState","useHistory","Jumbotron","Spinner","Form","Button","FormGroup","Label","Input","firebase","Login","history","creds","setCreds","nickname","showLoading","setShowLoading","ref","database","onChange","e","persist","target","name","value","login","preventDefault","orderByChild","equalTo","once","snapshot","exists","localStorage","setItem","push","newUser","set"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SACEC,SADF,EAEEC,OAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,SALF,EAMEC,KANF,EAOEC,KAPF,QAQO,YARP;AASA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAMC,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC;AAAEc,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAlC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMiB,GAAG,GAAGR,QAAQ,CAACS,QAAT,GAAoBD,GAApB,CAAwB,QAAxB,CAAZ;;AAEA,QAAME,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,OAAF;AACAR,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACQ,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAAtC,KAAD,CAAR;AACD,GAHD;;AAIA,QAAMC,KAAK,GAAIL,CAAD,IAAO;AACnBA,IAAAA,CAAC,CAACM,cAAF;AACAV,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAC,IAAAA,GAAG,CACAU,YADH,CACgB,UADhB,EAEGC,OAFH,CAEWhB,KAAK,CAACE,QAFjB,EAGGe,IAHH,CAGQ,OAHR,EAGkBC,QAAD,IAAc;AAC3B,UAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;AACrBC,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCrB,KAAK,CAACE,QAAvC;AACAH,QAAAA,OAAO,CAACuB,IAAR,CAAa,WAAb;AACAlB,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD,OAJD,MAIO;AACL,cAAMmB,OAAO,GAAG1B,QAAQ,CAACS,QAAT,GAAoBD,GAApB,CAAwB,QAAxB,EAAkCiB,IAAlC,EAAhB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYxB,KAAZ;AACAoB,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCrB,KAAK,CAACE,QAAvC;AACAH,QAAAA,OAAO,CAACuB,IAAR,CAAa,WAAb;AACAlB,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,KAfH;AAgBD,GAnBD;;AAoBA,sBACE;AAAA,eACGD,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADlB,eAEE,QAAC,SAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEU,KAAhB;AAAA,gCACE,QAAC,SAAD;AAAA,kCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,EAAE,EAAC,UAHL;AAIE,YAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAnDuBf,K;UACNT,U;;;KADMS,K","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  Jumbotron,\n  Spinner,\n  Form,\n  Button,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport firebase from \"../Firebase\";\n\nexport default function Login() {\n  const history = useHistory();\n  const [creds, setCreds] = useState({ nickname: \"\" });\n  const [showLoading, setShowLoading] = useState(false);\n  const ref = firebase.database().ref(\"users/\");\n\n  const onChange = (e) => {\n    e.persist();\n    setCreds({ ...creds, [e.target.name]: e.target.value });\n  };\n  const login = (e) => {\n    e.preventDefault();\n    setShowLoading(true);\n    ref\n      .orderByChild(\"nickname\")\n      .equalTo(creds.nickname)\n      .once(\"value\", (snapshot) => {\n        if (snapshot.exists()) {\n          localStorage.setItem(\"nickname\", creds.nickname);\n          history.push(\"/roomlist\");\n          setShowLoading(false);\n        } else {\n          const newUser = firebase.database().ref(\"users/\").push();\n          newUser.set(creds);\n          localStorage.setItem(\"nickname\", creds.nickname);\n          history.push(\"/roomlist\");\n          setShowLoading(false);\n        }\n      });\n  };\n  return (\n    <div>\n      {showLoading && <Spinner color=\"primary\" />}\n      <Jumbotron>\n        <Form onSubmit={login}>\n          <FormGroup>\n            <Label>Nickname</Label>\n            <Input\n              type=\"text\"\n              name=\"nickname\"\n              id=\"nickname\"\n              placeholder=\"Enter Your Nickname\"\n            />\n          </FormGroup>\n          <Button variant=\"primary\" type=\"submit\">\n            Login\n          </Button>\n        </Form>\n      </Jumbotron>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}